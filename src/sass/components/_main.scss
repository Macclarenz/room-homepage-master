@use '../abstracts/'as abs;

.main-container {
    padding-block: 3em;
    position: relative;

    &>*:not(.arrow-container) {
        @include abs.centerElement(85%);
    }

    &>h1 {
        font-weight: abs.$ls-bold;
        font-size: 36px;
        margin-bottom: .5em !important;
    }

    &>p {
        color: abs.$Dark-Gray;
        font-size: 16px;
        line-height: 1.4;
    }

    &>a {
        color: abs.$Black;
        display: flex;
        font-size: 14px;
        font-weight: abs.$ls-medium;
        letter-spacing: 10px;
        margin-top: 2em !important;
        text-decoration: none;
        text-transform: uppercase;
        transition: all 350ms ease;

        &>svg {
            margin-left: 1em;
            transition: all 350ms ease-out;

            & > path { transition: all 350ms ease;}
        }

        &:where(:hover, :focus) {
            color: abs.$Dark-Gray;

            &>svg {
                transform: translateX(.5em);

                &>path {
                    fill: abs.$Dark-Gray;
                }
            }
            
        }
    }
}

.arrow-container {
    @include abs.flex(center, center, row);
    position: absolute;
    right: 0;
    bottom: 100%;

    &>button {
        @include abs.resetInput(pointer);
        display: flex;
        background-color: abs.$Black;
        padding: 1.25em 1.5em;
        transition: all 350ms ease;

        &>img {
            transform: scale(.75);
        }

        &:where(:focus, :hover) {
            background-color: abs.$Dark-Gray;
        }
    }
}

// Animation
.main-container > *[class=animate-next] {
    animation: animate-next 600ms ease;

    @keyframes animate-next {
        from {
            opacity: 0;
            transform: translateX(24px);
        } to {
            opacity: 1;
            transform: translateX(0);
        }
    }
}

.main-container > *[class=animate-prev] {
    animation: animate-prev 600ms ease;

    @keyframes animate-prev {
        from {
            opacity: 0;
            transform: translateX(-24px);
        } to {
            opacity: 1;
            transform: translateX(0);
        }
    }
}



